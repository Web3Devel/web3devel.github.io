#VRML V2.0 utf8
# X3D-to-VRML-97 XSL translation autogenerated by X3dToVrml97.xsl
# http://www.web3D.org/TaskGroups/x3d/translation/X3dToVrml97.xsl

# [X3D] VRML V3.0 utf8

# [head]
# [meta] filename: Figure27.1VisibilitySensorDungeonSlidingDoors.x3d
# [meta] author: Figure 27.1, The VRML 2.0 Sourcebook, Copyright [1997] By Andrea L. Ames, David R. Nadeau, and John L. Moreland
# [meta] translator: Don Brutzman
# [meta] created: 26 October 2000
# [meta] revised: 2 November 2002
# [meta] description: A dungeon door that slides open and closed based on visibility.  When you are not looking the door it goes shut, then it reopens when you look back.  Page up/down between the first two viewpoints to observe this.  Arrow keys also help you peek left/right.  Interesting side effect:  users can't back through the door.
# [meta] url: http://www.web3d.org/TaskGroups/x3d/translation/examples/Vrml2.0Sourcebook/Chapter27-VisibilityProximityCollisionSensing/Figure27.1VisibilitySensorDungeonSlidingDoors.x3d
# [meta] generator: X3D-Edit, http://www.web3d.org/TaskGroups/x3d/translation/README.X3D-Edit.html
# [Scene]

Viewpoint {
  description "Now doors open, because they are visible"
  fieldOfView 1.05
  position 0 2 10
}
Viewpoint {
  description "Now doors close, because they are not visible"
  fieldOfView 1.05
  orientation 0 1 0 -0.85
  position 0 2 5
}
NavigationInfo {
  avatarSize [ 0.5 1.6 0.5 ]
  headlight FALSE
  speed 2
  type [ "WALK" "EXAMINE" "ANY" ]
}
Group {
  children [
      LOD {
        range [ 20 ]
        level [
        DEF DungeonRoom Inline {
          url [ "../Chapter25-LevelOfDetail/Figure25.08DungeonRoom.wrl"
"http://www.web3d.org/TaskGroups/x3d/translation/examples/Vrml2.0Sourcebook/Chapter25-LevelOfDetail/Figure25.08DungeonRoom.wrl"
"../Chapter25-LevelOfDetail/Figure25.08DungeonRoom.x3d"
"http://www.web3d.org/TaskGroups/x3d/translation/examples/Vrml2.0Sourcebook/Chapter25-LevelOfDetail/Figure25.08DungeonRoom.x3d" ]
        }
        WorldInfo {
          info [ "null node" ]
        }
         ]
      }
      Transform {
        translation 0 0 -10
        children [
            LOD {
              range [ 20 ]
              level [
              USE DungeonRoom
              WorldInfo {
                info [ "null node" ]
              }
               ]
            }
         ]
      }
      Transform {
        translation 0 0 -5
        children [
            Inline {
              url [ "../Chapter25-LevelOfDetail/Figure25.10DungeonWallWithDoorway.wrl"
"http://www.web3d.org/TaskGroups/x3d/translation/examples/Vrml2.0Sourcebook/Chapter25-LevelOfDetail/Figure25.10DungeonWallWithDoorway.wrl"
"../Chapter25-LevelOfDetail/Figure25.10DungeonWallWithDoorway.x3d"
"http://www.web3d.org/TaskGroups/x3d/translation/examples/Vrml2.0Sourcebook/Chapter25-LevelOfDetail/Figure25.10DungeonWallWithDoorway.x3d" ]
            }
         ]
      }
      Transform {
        rotation 0 1 0 1.57
        scale 1 1 2
        translation 0 0 -15
        children [
            Inline {
              url [ "../Chapter25-LevelOfDetail/Figure25.07DungeonRoomWall.wrl"
"http://www.web3d.org/TaskGroups/x3d/translation/examples/Vrml2.0Sourcebook/Chapter25-LevelOfDetail/Figure25.07DungeonRoomWall.wrl"
"../Chapter25-LevelOfDetail/Figure25.07DungeonRoomWall.x3d"
"http://www.web3d.org/TaskGroups/x3d/translation/examples/Vrml2.0Sourcebook/Chapter25-LevelOfDetail/Figure25.07DungeonRoomWall.x3d" ]
            }
         ]
      }
      Transform {
        translation 0 0 -4.95
        children [
            DEF LeftDoor Transform {
              children [
                  Transform {
                    translation -0.75 0 0
                    children [
                        DEF Door Inline {
                          url [ "../Chapter25-LevelOfDetail/Figure25.11DungeonDoor.wrl"
"http://www.web3d.org/TaskGroups/x3d/translation/examples/Vrml2.0Sourcebook/Chapter25-LevelOfDetail/Figure25.11DungeonDoor.wrl"
"../Chapter25-LevelOfDetail/Figure25.11DungeonDoor.x3d"
"http://www.web3d.org/TaskGroups/x3d/translation/examples/Vrml2.0Sourcebook/Chapter25-LevelOfDetail/Figure25.11DungeonDoor.x3d" ]
                        }
                     ]
                  }
               ]
            }
            DEF RightDoor Transform {
              children [
                  Transform {
                    translation 0.75 0 0
                    children [
                        USE Door
                     ]
                  }
               ]
            }
            DEF DoorSense VisibilitySensor {
              center 0 1.75 0
              size 3 2.5 1
            }
         ]
      }
      Sound {
        maxBack 60
        maxFront 60
        minBack 20
        minFront 20
        source DEF OpenSound AudioClip {
          description "door clunks open"
          url [ "clunk1.wav"
"../Chapter27-VisibilityProximityCollisionSensing/clunk1.wav"
"http://www.web3d.org/TaskGroups/x3d/translation/examples/Vrml2.0Sourcebook/Chapter27-VisibilityProximityCollisionSensing/clunk1.wav" ]
        }
      }
      Sound {
        maxBack 60
        maxFront 60
        minBack 20
        minFront 20
        source DEF CloseSound AudioClip {
          description "door clunks shut"
          url [ "clunk1.wav"
"../Chapter27-VisibilityProximityCollisionSensing/clunk1.wav"
"http://www.web3d.org/TaskGroups/x3d/translation/examples/Vrml2.0Sourcebook/Chapter27-VisibilityProximityCollisionSensing/clunk1.wav" ]
        }
      }
      DEF OpenClock TimeSensor {
        cycleInterval 2
      }
      DEF CloseClock TimeSensor {
        cycleInterval 2
      }
      DEF LeftOpen PositionInterpolator {
        key [ 0, 1 ]
        keyValue [ 0 0 0, -1.3 0 0 ]
      }
      DEF LeftClose PositionInterpolator {
        key [ 0, 1 ]
        keyValue [ -1.3 0 0, 0 0 0 ]
      }
      DEF RightOpen PositionInterpolator {
        key [ 0, 1 ]
        keyValue [ 0 0 0, 1.3 0 0 ]
      }
      DEF RightClose PositionInterpolator {
        key [ 0, 1 ]
        keyValue [ 1.3 0 0, 0 0 0 ]
      }
   ]
}
# open door
ROUTE DoorSense.enterTime TO OpenSound.set_startTime
ROUTE DoorSense.exitTime TO OpenSound.set_stopTime
ROUTE DoorSense.enterTime TO OpenClock.set_startTime
ROUTE DoorSense.exitTime TO OpenClock.set_stopTime
# close door
ROUTE DoorSense.exitTime TO CloseSound.set_startTime
ROUTE DoorSense.enterTime TO CloseSound.set_stopTime
ROUTE DoorSense.exitTime TO CloseClock.set_startTime
ROUTE DoorSense.enterTime TO CloseClock.set_stopTime
# door timers
ROUTE OpenClock.fraction_changed TO LeftOpen.set_fraction
ROUTE OpenClock.fraction_changed TO RightOpen.set_fraction
ROUTE CloseClock.fraction_changed TO LeftClose.set_fraction
ROUTE CloseClock.fraction_changed TO RightClose.set_fraction
# door translations
ROUTE LeftOpen.value_changed TO LeftDoor.set_translation
ROUTE RightOpen.value_changed TO RightDoor.set_translation
ROUTE LeftClose.value_changed TO LeftDoor.set_translation
ROUTE RightClose.value_changed TO RightDoor.set_translation
