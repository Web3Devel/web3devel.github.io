#VRML V2.0 utf8
# X3D-to-VRML-97 XSL translation autogenerated by X3dToVrml97.xslt
# http://www.web3d.org/x3d/content/X3dToVrml97.xslt
# Generated using XSLT processor: SAXON 9.1.0.6 from Saxonica

# [X3D] VRML V3.3 utf8
# PROFILE Immersive
# [X3D] version=3.3
# [X3D] noNamespaceSchemaLocation=http://www.web3d.org/specifications/x3d-3.3.xsd
# [head]

# META "title" "RoboBill.x3d"
# META "description" "Robot Billboard illustrates the use of Group, Transform, and Billboard groups."
# META "creator" "David R. Nadeau"
# META "translator" "Don Brutzman"
# META "created" "1 July 1998"
# META "translated" "2 February 2014"
# META "modified" "2 February 2014"
# META "reference" "originals/robobill.wrl"
# META "reference" "http://www.siggraph.org/s98"
# META "reference" "http://www.siggraph.org/s98/conference/courses/18.html"
# META "reference" "http://www.sdsc.edu/~moreland/courses/Siggraph98/vrml97/slides/mt0093.htm"
# META "reference" "http://www.sdsc.edu/~moreland/courses/Siggraph98/vrml97/vrml97.htm"
# META "reference" "http://www.web3d.org/x3d/content/examples/X3dResources.html"
# META "identifier" "http://www.web3d.org/x3d/content/examples/Vrml2.0Sourcebook/Siggraph98Course/RoboBill.x3d"
# META "generator" "Vrml97ToX3dNist, http://ovrt.nist.gov/v2_x3d.html"
# META "generator" "X3D-Edit, https://savage.nps.edu/X3D-Edit"
# META "license" "../license.html"

# [Scene] ========== ========== ==========

# Two robots are built with their heads in Billboard groups, but their torsos left out of it. As the viewer walks about the robot, the heads always turn to face the viewer. The left robot's head is constrained to rotate about the Y axis, while the right robot's head can rotate freely.
# To make it clear what is, and is not moving to track the viewer, the torso of the robot remains fixed, as does a background of blue slabs.
# Things to experiment with:
# Place the entire robot in the Billboard group so that the whole robot tracks the viewer, not just the robot's head.
# Add textures to the environment.
# Add light sources, such as one placed in the lower ball of the robot. Make that ball emissive as well so that it looks like the ball is the source of light. Remember to put the light source inside the robot's transform group so that as the robot moves, the light source moves with it.
# Add behavior to the robot. Make it move on its own!
# 
WorldInfo {
  info [ "Copyright (c) 1998, David R. Nadeau" ]
  title "Robot Billboard"
}
DEF Entry Viewpoint {
  description "Entry View"
  position 0.0 3.0 12.0
}
NavigationInfo {
}
Background {
}
Transform {
  scale 2.0 2.0 2.0
  translation -2.0 1.0 0.0
  children [
      DEF RoboBody Inline {
        url [ "robobody.x3d" "http://www.web3d.org/x3d/content/examples/Vrml2.0Sourcebook/Siggraph98Course/robobody.x3d" "robobody.wrl" "http://www.web3d.org/x3d/content/examples/Vrml2.0Sourcebook/Siggraph98Course/robobody.wrl" ]
      }
      Transform {
        translation 0.0 1.4 0.0
        children [
            Billboard {
              children [
                  DEF RoboHead Inline {
                    url [ "robohead.x3d" "http://www.web3d.org/x3d/content/examples/Vrml2.0Sourcebook/Siggraph98Course/robohead.x3d" "robohead.wrl" "http://www.web3d.org/x3d/content/examples/Vrml2.0Sourcebook/Siggraph98Course/robohead.wrl" ]
                  }
              ]
            }
        ]
      }
  ]
}
Transform {
  scale 2.0 2.0 2.0
  translation 2.0 1.0 0.0
  children [
      USE RoboBody
      Transform {
        translation 0.0 1.4 0.0
        children [
            Billboard {
              axisOfRotation 0.0 0.0 0.0
              children [
                  USE RoboHead
              ]
            }
        ]
      }
  ]
}
Transform {
  translation 0.0 2.0 -6.0
  children [
      DEF Slab Shape {
        appearance Appearance {
          material Material {
            diffuseColor 0.0 0.1 0.5
            emissiveColor 0.0 0.3 0.5
          }
        }
        geometry Box {
          size 2.0 4.0 0.3
        }
      }
  ]
}
Transform {
  translation -6.0 2.0 0.0
  children [
      USE Slab
  ]
}
Transform {
  translation 6.0 2.0 0.0
  children [
      USE Slab
  ]
}
Transform {
  translation -4.3 2.0 -4.3
  children [
      USE Slab
  ]
}
Transform {
  translation 4.3 2.0 -4.3
  children [
      USE Slab
  ]
}
