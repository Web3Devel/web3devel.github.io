#VRML V2.0 utf8
# X3D-to-VRML-97 XSL translation autogenerated by X3dToVrml97.xslt
# http://www.web3d.org/x3d/content/X3dToVrml97.xslt
# Generated using XSLT processor: SAXON 9.1.0.6 from Saxonica

# [X3D] VRML V3.3 utf8
# PROFILE Immersive
# [X3D] version=3.3
# [X3D] noNamespaceSchemaLocation=http://www.web3d.org/specifications/x3d-3.3.xsd
# [head]

# META "title" "Floater.x3d"
# META "description" "Floating pads world: a collection of white pads are created. Each pad slides back and forth horizontally or vertically at its own speed. A green light illuminates the tops of the pads while a blue light illuminates the bottoms."
# META "creator" "David R. Nadeau"
# META "translator" "Don Brutzman"
# META "created" "1 July 1998"
# META "translated" "2 February 2014"
# META "modified" "2 February 2014"
# META "reference" "originals/floater.wrl"
# META "reference" "http://www.siggraph.org/s98"
# META "reference" "http://www.siggraph.org/s98/conference/courses/18.html"
# META "reference" "http://www.sdsc.edu/~moreland/courses/Siggraph98/vrml97/slides/mt0008.htm"
# META "reference" "http://www.sdsc.edu/~moreland/courses/Siggraph98/vrml97/slides/mt0135htm"
# META "reference" "http://www.sdsc.edu/~moreland/courses/Siggraph98/vrml97/vrml97.htm"
# META "reference" "http://www.web3d.org/x3d/content/examples/X3dResources.html"
# META "identifier" "http://www.web3d.org/x3d/content/examples/Vrml2.0Sourcebook/Siggraph98Course/Floater.x3d"
# META "generator" "Vrml97ToX3dNist, http://ovrt.nist.gov/v2_x3d.html"
# META "generator" "X3D-Edit, https://savage.nps.edu/X3D-Edit"
# META "license" "../license.html"

# [Scene] ========== ========== ==========

# Complexity is created from simplicity via two tricks:
# 1. Create a set of simple shapes, then repeat the same shapes several times. In this case, there are only 7 original pads moving left and right. Those 7 are repeated again, but turned around the Y axis so that they slide front to back. The same 7 are repeated again, but rotated around the Z axis so that they slide up and down. The effect is one of a complex bunch of moving shapes when in reality there are only 7.
# 2. Give each moving shape a slightly different cycle interval for its animation. This makes all the movement out of sync, which again creates the appearance of complexity.
# A PROTO is used to create a new Pad node that incorporates a box shape, a time sensor, a position interpolator, and routes to connect them together. Fields to the Pad node control the initial placement of the pad, and it's animation cycle interval.
# Add textures. Particularly try adding a texture with a transparency (alpha) channel. Using transparency textures you can add stripes, checks, or whatever to the pads. One approach that looks interesting is to add a cloud texture, but make the sky behind the clouds transparent in the texture. When mapped, this creates a blobby indistinct shape on each pad.
# Add a Transform node around the entire group of pads, then use an OrientationInterpolator and TimeSensor to slowly spin the world. Remembering the complexity tricks above, you can create a complex tumble by using three nested Transform nodes (X, Y, and Z), each with its own OrientationInterpolator and TimeSensor. Give the three TimeSensors slightly different cycleInterval values (such as 5.0, 7.0, and 11.0). Prime numbers are good choices. Since the cycle times are different for the three spins, they don't sync up, and it looks like a chaotic tumble.
WorldInfo {
  info [ "Copyright (c) 1996, David R. Nadeau" ]
  title "Floating Pads World"
}
Viewpoint {
  description "Entry View"
  position 0.0 1.6 10.0
}
NavigationInfo {
  headlight FALSE
}
Background {
  skyColor [ 0.0 0.1 0.4 ]
}
DirectionalLight {
  color 0.3 1.0 0.3
  direction 0.5 -1.0 -0.7
}
DirectionalLight {
  color 0.0 0.3 1.0
  direction -0.5 1.0 0.7
}
PROTO Pad [
  exposedField SFRotation	rotation 0.0 0.0 1.0 0.0
  exposedField SFTime	cycleInterval 10.0
  exposedField SFVec3f	translation 0.0 0.0 0.0
] {
  Collision {
    collide FALSE
 children [
      Transform {
                  translation IS translation
          rotation IS rotation
        children [
            DEF Movee Transform {
              children [
                  Shape {
                    appearance Appearance {
                      material Material {
                        diffuseColor 1.0 1.0 1.0
                      }
                    }
                    geometry Box {
                      size 4.0 0.2 2.0
                    }
                  }
                  DEF Clock TimeSensor {
                    loop TRUE
                    startTime 1.0
                                          cycleInterval IS cycleInterval
                  }
                  DEF Mover PositionInterpolator {
                    key [ 0.0 0.5 1.0 ]
                    keyValue [ -10.0 0.0 0.0 10.0 0.0 0.0 -10.0 0.0 0.0 ]
                  }
              ]
            }
        ]
      }
 ]
  }
  ROUTE Clock.fraction_changed TO Mover.set_fraction
  ROUTE Mover.value_changed TO Movee.set_translation
}
 Pad {
  cycleInterval  10.0
  translation  0.0 4.0 0.0
}
 Pad {
  cycleInterval  12.0
  translation  -2.0 0.0 -2.0
}
 Pad {
  cycleInterval  14.0
  translation  2.0 6.0 -4.0
}
 Pad {
  cycleInterval  16.0
  translation  -4.0 2.0 -8.0
}
 Pad {
  cycleInterval  18.0
  translation  0.0 -6.0 -10.0
}
 Pad {
  cycleInterval  10.0
  translation  4.0 -2.0 -10.0
}
 Pad {
  cycleInterval  8.0
  translation  0.0 -4.0 -0.0
}
 Pad {
  rotation  0.0 1.0 0.0 1.571
  cycleInterval  10.0
  translation  0.0 4.0 0.0
}
 Pad {
  rotation  0.0 1.0 0.0 1.571
  cycleInterval  12.0
  translation  -2.0 0.0 -2.0
}
 Pad {
  rotation  0.0 1.0 0.0 1.571
  cycleInterval  14.0
  translation  2.0 6.0 -4.0
}
 Pad {
  rotation  0.0 1.0 0.0 1.571
  cycleInterval  16.0
  translation  -4.0 2.0 -8.0
}
 Pad {
  rotation  0.0 1.0 0.0 1.571
  cycleInterval  18.0
  translation  0.0 -6.0 -10.0
}
 Pad {
  rotation  0.0 1.0 0.0 1.571
  cycleInterval  10.0
  translation  4.0 -2.0 -10.0
}
 Pad {
  rotation  0.0 1.0 0.0 1.571
  cycleInterval  8.0
  translation  0.0 -4.0 -0.0
}
 Pad {
  rotation  0.0 0.0 1.0 1.571
  cycleInterval  10.0
  translation  0.0 4.0 0.0
}
 Pad {
  rotation  0.0 0.0 1.0 1.571
  cycleInterval  12.0
  translation  -2.0 0.0 -2.0
}
 Pad {
  rotation  0.0 0.0 1.0 1.571
  cycleInterval  14.0
  translation  2.0 6.0 -4.0
}
 Pad {
  rotation  0.0 0.0 1.0 1.571
  cycleInterval  16.0
  translation  -4.0 2.0 -8.0
}
 Pad {
  rotation  0.0 0.0 1.0 1.571
  cycleInterval  18.0
  translation  0.0 -6.0 -10.0
}
 Pad {
  rotation  0.0 0.0 1.0 1.571
  cycleInterval  10.0
  translation  4.0 -2.0 -10.0
}
 Pad {
  rotation  0.0 0.0 1.0 1.571
  cycleInterval  8.0
  translation  0.0 -4.0 -0.0
}
