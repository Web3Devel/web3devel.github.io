#X3D V3.0 utf8
# X3D-to-ClassicVRML XSL translation autogenerated by X3dToVrml97.xslt
# https://www.web3d.org/x3d/content/X3dToVrml97.xslt
# Generated using XSLT processor: Saxonica

PROFILE Immersive
# [X3D] version=3.0
# [X3D] noNamespaceSchemaLocation=https://www.web3d.org/specifications/x3d-3.0.xsd
# [head]

META "title" "Figure09_6SphereSensorWithAxes.x3d"
META "creator" "Figure 9.6, The VRML 2.0 Sourcebook, Copyright [1997] By Andrea L. Ames, David R. Nadeau, and John L. Moreland"
META "reference" "http://www.wiley.com/legacy/compbooks/vrml2sbk/ch09/09fig06.htm"
META "transcriber" "Don Brutzman"
META "created" "12 August 2000"
META "modified" "20 October 2019"
META "description" "Two shapes that rotate when the viewer drags them, with coordinate axes superimposed to show X3D/VRML directions."
META "identifier" "https://www.web3d.org/x3d/content/examples/Vrml2Sourcebook/Chapter09SensingViewer/Figure09_6SphereSensorWithAxes.x3d"
META "generator" "X3D-Edit 3.3, https://savage.nps.edu/X3D-Edit"
META "license" "../../license.html"

# [Scene] ========== ========== ==========

NavigationInfo { type [ "EXAMINE" "ANY" ] } ###  Default X3D NavigationInfo

# Click and drag to rotate shapes. Superfluous Group nodes removed.
WorldInfo {
  title "Figure09_6SphereSensorWithAxes.x3d"
}
DEF FIRST_TRANSFORM Transform {
  translation -2 0 0
  children [
      Shape {
        geometry Box {
        }
        appearance DEF FIRST_APPEARANCE Appearance {
          material Material {
            diffuseColor .9 .5 .1
            emissiveColor .2 .1 .05
          }
        }
      }
      DEF FIRST_SPHERESENSOR SphereSensor {
        description "click and drag to rotate"
      }
  ]
}
DEF SECOND_TRANSFORM Transform {
  translation 2 0 0
  children [
      Shape {
        geometry Cone {
        }
        appearance USE FIRST_APPEARANCE
      }
      DEF SECOND_SPHERESENSOR SphereSensor {
        description "click and drag to rotate"
      }
      DEF TRANSPARENT_CYLINDER_TRANSFORM Transform {
        translation 0 -.2 0
        children [
            Shape {
              geometry Sphere {
                radius 1.3
              }
              appearance Appearance {
                material Material {
                  diffuseColor .7 .7 .7
                  transparency .5
                }
              }
            }
        ]
      }
  ]
}
# Adding this Inline reference to another scene superimposes X3D/VRML coordinate system axes.
Transform {
  scale 4 4 4
  children [
      DEF CoordinateAxes Inline {
        url [ "../../X3dForWebAuthors/Chapter03Grouping/CoordinateAxes.x3d" "https://www.web3d.org/x3d/content/examples/X3dForWebAuthors/Chapter03Grouping/CoordinateAxes.x3d" "https://savage.nps.edu/Savage/Tools/Authoring/CoordinateAxes.x3d" "../../X3dForWebAuthors/Chapter03Grouping/CoordinateAxes.wrl" "https://www.web3d.org/x3d/content/examples/X3dForWebAuthors/Chapter03Grouping/CoordinateAxes.wrl" "https://savage.nps.edu/Savage/Tools/Authoring/CoordinateAxes.wrl" ]
      }
  ]
}
# Note that we are connecting a rotation output to a rotation input in each of these ROUTEs.
ROUTE FIRST_SPHERESENSOR.rotation_changed TO FIRST_TRANSFORM.set_rotation
ROUTE SECOND_SPHERESENSOR.rotation_changed TO SECOND_TRANSFORM.set_rotation
# Have some fun: have the first sensor route to the second transform, and vice versa.
