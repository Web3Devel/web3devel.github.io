#X3D V3.3 utf8
# X3D-to-ClassicVRML XSL translation autogenerated by X3dToVrml97.xslt
# https://www.web3d.org/x3d/content/X3dToVrml97.xslt
# Generated using XSLT processor: Saxonica

PROFILE Interchange
# [X3D] version=3.3
# [X3D] noNamespaceSchemaLocation=https://www.web3d.org/specifications/x3d-3.3.xsd
# [head]

META "title" "TimedTimer.x3d"
META "description" "Timed-timer demonstrates how to drive one TimeSensor with another one in order periodically trigger another animation."
META "creator" "David R. Nadeau"
META "translator" "Don Brutzman"
META "created" "1 July 1998"
META "translated" "2 February 2014"
META "modified" "20 October 2019"
META "reference" "originals/timetime.wrl"
META "reference" "http://www.siggraph.org/s98"
META "reference" "http://www.siggraph.org/s98/conference/courses/18.html"
META "reference" "http://www.sdsc.edu/~moreland/courses/Siggraph98/vrml97/slides/mt0257.htm"
META "reference" "http://www.sdsc.edu/~moreland/courses/Siggraph98/vrml97/vrml97.htm"
META "reference" "https://www.web3d.org/x3d/content/examples/X3dResources.html"
META "identifier" "https://www.web3d.org/x3d/content/examples/Vrml2Sourcebook/Siggraph98Course/TimedTimer.x3d"
META "generator" "Vrml97ToX3dNist, http://ovrt.nist.gov/v2_x3d.html"
META "generator" "X3D-Edit, https://savage.nps.edu/X3D-Edit"
META "license" "../license.html"

# [Scene] ========== ========== ==========

WorldInfo {
  info [ "Copyright (c) 1997, David R. Nadeau" ]
  title "Timed timer"
}
Viewpoint {
  description "Entry view"
  position 0.0 0.0 12.0
}
NavigationInfo {
}
DEF Red Transform {
  children [
      Shape {
        appearance Appearance {
          material Material {
            diffuseColor 1.0 0.0 0.0
          }
        }
        geometry Box {
        }
      }
  ]
}
Transform {
  translation 2.0 2.0 0.0
  children [
      USE Red
  ]
}
Transform {
  translation -2.0 2.0 0.0
  children [
      USE Red
  ]
}
Transform {
  translation 2.0 -2.0 0.0
  children [
      USE Red
  ]
}
Transform {
  translation -2.0 -2.0 0.0
  children [
      USE Red
  ]
}
Transform {
  translation 0.0 -2.0 2.0
  children [
      USE Red
  ]
}
Transform {
  translation 0.0 2.0 2.0
  children [
      USE Red
  ]
}
Transform {
  translation 2.0 0.0 2.0
  children [
      USE Red
  ]
}
Transform {
  translation -2.0 0.0 2.0
  children [
      USE Red
  ]
}
Transform {
  translation 0.0 -2.0 -2.0
  children [
      USE Red
  ]
}
Transform {
  translation 0.0 2.0 -2.0
  children [
      USE Red
  ]
}
Transform {
  translation 2.0 0.0 -2.0
  children [
      USE Red
  ]
}
Transform {
  translation -2.0 0.0 -2.0
  children [
      USE Red
  ]
}
DEF Blue Transform {
  translation 2.0 0.0 0.0
  children [
      Shape {
        appearance Appearance {
          material Material {
            diffuseColor 0.0 0.0 1.0
          }
        }
        geometry Box {
        }
      }
  ]
}
Transform {
  translation -4.0 0.0 0.0
  children [
      USE Blue
  ]
}
Transform {
  translation -2.0 0.0 2.0
  children [
      USE Blue
  ]
}
Transform {
  translation -2.0 0.0 -2.0
  children [
      USE Blue
  ]
}
Transform {
  translation -2.0 2.0 0.0
  children [
      USE Blue
  ]
}
Transform {
  translation -2.0 -2.0 0.0
  children [
      USE Blue
  ]
}
Transform {
  translation 0.0 2.0 2.0
  children [
      USE Blue
  ]
}
Transform {
  translation 0.0 2.0 -2.0
  children [
      USE Blue
  ]
}
Transform {
  translation -4.0 2.0 2.0
  children [
      USE Blue
  ]
}
Transform {
  translation -4.0 2.0 -2.0
  children [
      USE Blue
  ]
}
Transform {
  translation 0.0 -2.0 2.0
  children [
      USE Blue
  ]
}
Transform {
  translation 0.0 -2.0 -2.0
  children [
      USE Blue
  ]
}
Transform {
  translation -4.0 -2.0 2.0
  children [
      USE Blue
  ]
}
Transform {
  translation -4.0 -2.0 -2.0
  children [
      USE Blue
  ]
}
DEF Clock TimeSensor {
  cycleInterval 3.0
}
DEF Trigger TimeSensor {
  cycleInterval 5.0
  loop TRUE
}
DEF RedScale PositionInterpolator {
  key [ 0.0 0.5 1.0 ]
  keyValue [ 1.0 1.0 1.0 1.0E-4 1.0E-4 1.0E-4 1.0 1.0 1.0 ]
}
DEF BlueScale PositionInterpolator {
  key [ 0.0 0.25 0.5 0.75 1.0 ]
  keyValue [ 1.0 1.0 1.0 1.0E-4 1.0E-4 1.0E-4 1.0 1.0 1.0 1.0E-4 1.0E-4 1.0E-4 1.0 1.0 1.0 ]
}
ROUTE Trigger.cycleTime TO Clock.set_startTime
ROUTE Clock.fraction_changed TO RedScale.set_fraction
ROUTE Clock.fraction_changed TO BlueScale.set_fraction
ROUTE RedScale.value_changed TO Red.set_scale
ROUTE BlueScale.value_changed TO Blue.set_scale
