@prefix :        <https://www.web3d.org/x3d/content/examples/Vrml2Sourcebook/Siggraph98Course/Cut.ttl#> .
@prefix owl:     <http://www.w3.org/2002/07/owl#> .
@prefix rdf:     <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs:    <http://www.w3.org/2000/01/rdf-schema#> .
@prefix schema:  <http://schema.org/> .
@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix xsd:     <http://www.w3.org/2001/XMLSchema#> .
@prefix x3d:     <https://www.web3d.org/specifications/x3d-4.0.xsd#> .
@prefix x3do:    <https://www.web3d.org/specifications/X3dOntology4.0#> .

:X3D a owl:NamedIndividual, x3do:X3D ;
  x3do:hasHead :head ;
  x3do:hasScene :Scene ;
  x3do:profile 'Immersive' ;
  x3do:version '3.3' ;
  x3do:noNamespaceSchemaLocation 'https://www.web3d.org/specifications/x3d-3.3.xsd' .
:head a owl:NamedIndividual, x3do:head ;
  x3do:hasParent :X3D ;
  x3do:hasMeta :meta_1_1, :meta_1_2, :meta_1_3, :meta_1_4, :meta_1_5, :meta_1_6, :meta_1_7, :meta_1_8, :meta_1_9, :meta_1_10, :meta_1_11, :meta_1_12, :meta_1_13, :meta_1_14, :meta_1_15, :meta_1_16, :meta_1_17, :meta_1_18, :meta_1_19 .
:meta_1_1 a owl:NamedIndividual, x3do:meta ;
  x3do:hasParent :head ;
  x3do:content 'Cut.x3d' ;
  x3do:name 'title' .
:meta_1_2 a owl:NamedIndividual, x3do:meta ;
  x3do:hasParent :head ;
  x3do:content 'Cutting plane parts: this file contains two prototype declarations used in creating a cutting plane. The example scene TexturePlane uses these for external prototype instances and creates a plane with one of a set of textures mapped to it. The texture choice is controlled by a fraction eventIn. SlidingPlane creates a texture plane that slides back and forth along the X axis, changing the texture based upon the X position.' ;
  x3do:name 'description' .
:meta_1_3 a owl:NamedIndividual, x3do:meta ;
  x3do:hasParent :head ;
  x3do:content 'David R. Nadeau' ;
  x3do:name 'creator' .
:meta_1_4 a owl:NamedIndividual, x3do:meta ;
  x3do:hasParent :head ;
  x3do:content 'Don Brutzman' ;
  x3do:name 'translator' .
:meta_1_5 a owl:NamedIndividual, x3do:meta ;
  x3do:hasParent :head ;
  x3do:content '1 July 1998' ;
  x3do:name 'created' .
:meta_1_6 a owl:NamedIndividual, x3do:meta ;
  x3do:hasParent :head ;
  x3do:content '2 February 2014' ;
  x3do:name 'translated' .
:meta_1_7 a owl:NamedIndividual, x3do:meta ;
  x3do:hasParent :head ;
  x3do:content '16 December 2023' ;
  x3do:name 'modified' .
:meta_1_8 a owl:NamedIndividual, x3do:meta ;
  x3do:hasParent :head ;
  x3do:content 'CutPlane.x3d' ;
  x3do:name 'reference' .
:meta_1_9 a owl:NamedIndividual, x3do:meta ;
  x3do:hasParent :head ;
  x3do:content 'TexturePlane.x3d' ;
  x3do:name 'reference' .
:meta_1_10 a owl:NamedIndividual, x3do:meta ;
  x3do:hasParent :head ;
  x3do:content 'originals/cut.wrl' ;
  x3do:name 'reference' .
:meta_1_11 a owl:NamedIndividual, x3do:meta ;
  x3do:hasParent :head ;
  x3do:content 'http://www.siggraph.org/s98' ;
  x3do:name 'reference' .
:meta_1_12 a owl:NamedIndividual, x3do:meta ;
  x3do:hasParent :head ;
  x3do:content 'http://www.siggraph.org/s98/conference/courses/18.html' ;
  x3do:name 'reference' .
:meta_1_13 a owl:NamedIndividual, x3do:meta ;
  x3do:hasParent :head ;
  x3do:content 'http://www.sdsc.edu/~moreland/courses/Siggraph98/vrml97/slides/mt0497.htm' ;
  x3do:name 'reference' .
:meta_1_14 a owl:NamedIndividual, x3do:meta ;
  x3do:hasParent :head ;
  x3do:content 'http://www.sdsc.edu/~moreland/courses/Siggraph98/vrml97/vrml97.htm' ;
  x3do:name 'reference' .
:meta_1_15 a owl:NamedIndividual, x3do:meta ;
  x3do:hasParent :head ;
  x3do:content 'https://www.web3d.org/x3d/content/examples/X3dResources.html' ;
  x3do:name 'reference' .
:meta_1_16 a owl:NamedIndividual, x3do:meta ;
  x3do:hasParent :head ;
  x3do:content 'https://www.web3d.org/x3d/content/examples/Vrml2Sourcebook/Siggraph98Course/Cut.x3d' ;
  x3do:name 'identifier' .
:meta_1_17 a owl:NamedIndividual, x3do:meta ;
  x3do:hasParent :head ;
  x3do:content 'Vrml97ToX3dNist, http://ovrt.nist.gov/v2_x3d.html' ;
  x3do:name 'generator' .
:meta_1_18 a owl:NamedIndividual, x3do:meta ;
  x3do:hasParent :head ;
  x3do:content 'X3D-Edit, https://savage.nps.edu/X3D-Edit' ;
  x3do:name 'generator' .
:meta_1_19 a owl:NamedIndividual, x3do:meta ;
  x3do:hasParent :head ;
  x3do:content '../license.html' ;
  x3do:name 'license' .
:meta dcterms:title "Cut.x3d" .
:meta dcterms:description "Cutting plane parts: this file contains two prototype declarations used in creating a cutting plane. The example scene TexturePlane uses these for external prototype instances and creates a plane with one of a set of textures mapped to it. The texture choice is controlled by a fraction eventIn. SlidingPlane creates a texture plane that slides back and forth along the X axis, changing the texture based upon the X position." .
:meta dcterms:creator "David R. Nadeau" .
:meta dcterms:translator "Don Brutzman" .
:meta dcterms:created "1 July 1998" .
:meta dcterms:translated "2 February 2014" .
:meta dcterms:modified "16 December 2023" .
:meta dcterms:reference "CutPlane.x3d" .
:meta dcterms:reference "TexturePlane.x3d" .
:meta dcterms:reference "originals/cut.wrl" .
:meta dcterms:reference "http://www.siggraph.org/s98" .
:meta dcterms:reference "http://www.siggraph.org/s98/conference/courses/18.html" .
:meta dcterms:reference "http://www.sdsc.edu/~moreland/courses/Siggraph98/vrml97/slides/mt0497.htm" .
:meta dcterms:reference "http://www.sdsc.edu/~moreland/courses/Siggraph98/vrml97/vrml97.htm" .
:meta dcterms:reference "https://www.web3d.org/x3d/content/examples/X3dResources.html" .
:meta dcterms:identifier "https://www.web3d.org/x3d/content/examples/Vrml2Sourcebook/Siggraph98Course/Cut.x3d" .
:meta dcterms:generator "Vrml97ToX3dNist, http://ovrt.nist.gov/v2_x3d.html" .
:meta dcterms:generator "X3D-Edit, https://savage.nps.edu/X3D-Edit" .
:meta dcterms:license "../license.html" .
:Scene a owl:NamedIndividual, x3do:Scene ;
  x3do:hasParent :X3D ;
  x3do:hasChildren :WorldInfo_2_1, :Background_2_4, :Transform_2_5, :Transform_2_6 ;
  x3do:hasProtoDeclare :ProtoDeclare_2_2, :ProtoDeclare_2_3 .
:WorldInfo_2_1 a owl:NamedIndividual, x3do:WorldInfo ;
  x3do:hasParent :Scene ;
  x3do:info '"Copyright (c) 1997, David R. Nadeau"' ;
  x3do:title 'Cutting Plane parts' .
:ProtoDeclare_2_2 a owl:NamedIndividual, x3do:ProtoDeclare ;
  x3do:hasParent :Scene ;
  x3do:hasProtoInterface :ProtoInterface_2_2_1 ;
  x3do:hasProtoBody :ProtoBody_2_2_2 ;
  x3do:name 'TexturePlane' .
:ProtoInterface_2_2_1 a owl:NamedIndividual, x3do:ProtoInterface ;
  x3do:hasParent :ProtoDeclare_2_2 ;
  x3do:hasField :field_2_2_1_1, :field_2_2_1_2 .
:field_2_2_1_1 a owl:NamedIndividual, x3do:field ;
  x3do:hasParent :ProtoInterface_2_2_1 ;
  x3do:accessType 'initializeOnly' ;
  x3do:name 'textures' ;
  x3do:type 'MFNode' .
:field_2_2_1_2 a owl:NamedIndividual, x3do:field ;
  x3do:hasParent :ProtoInterface_2_2_1 ;
  x3do:accessType 'inputOnly' ;
  x3do:name 'set_fraction' ;
  x3do:type 'SFFloat' .
:ProtoBody_2_2_2 a owl:NamedIndividual, x3do:ProtoBody ;
  x3do:hasParent :ProtoDeclare_2_2 ;
  x3do:hasChildren :Group_2_2_2_1, :Selector ;
  x3do:hasROUTE :ROUTE_2_2_2_3 .
:Group_2_2_2_1 a owl:NamedIndividual, x3do:Group ;
  x3do:hasParent :ProtoBody_2_2_2 ;
  x3do:hasChildren :Shape_2_2_2_1_1, :Shape_2_2_2_1_2 .
:Shape_2_2_2_1_1 a owl:NamedIndividual, x3do:Shape ;
  x3do:hasParent :Group_2_2_2_1 ;
  x3do:hasAppearance :App ;
  x3do:hasGeometry :IndexedFaceSet_2_2_2_1_1_2 .
:App a owl:NamedIndividual, x3do:Appearance ;
  x3do:hasParent :Shape_2_2_2_1_1 ;
  x3do:DEF 'App' .
:IndexedFaceSet_2_2_2_1_1_2 a owl:NamedIndividual, x3do:IndexedFaceSet ;
  x3do:hasParent :Shape_2_2_2_1_1 ;
  x3do:hasTexCoord :TextureCoordinate_2_2_2_1_1_2_1 ;
  x3do:hasCoord :Coordinate_2_2_2_1_1_2_2 ;
  x3do:coordIndex ( 0 1 2 3 ) ;
  x3do:solid false ;
  x3do:texCoordIndex ( 0 1 2 3 ) .
:TextureCoordinate_2_2_2_1_1_2_1 a owl:NamedIndividual, x3do:TextureCoordinate ;
  x3do:hasParent :IndexedFaceSet_2_2_2_1_1_2 ;
  x3do:point ( 0.0 0.0 1.0 0.0 1.0 1.0 0.0 1.0 ) .
:Coordinate_2_2_2_1_1_2_2 a owl:NamedIndividual, x3do:Coordinate ;
  x3do:hasParent :IndexedFaceSet_2_2_2_1_1_2 ;
  x3do:point ( -1.0 -1.0 0.0 1.0 -1.0 0.0 1.0 1.0 0.0 -1.0 1.0 0.0 ) .
:Shape_2_2_2_1_2 a owl:NamedIndividual, x3do:Shape ;
  x3do:hasParent :Group_2_2_2_1 ;
  x3do:hasAppearance :Appearance_2_2_2_1_2_1 ;
  x3do:hasGeometry :IndexedLineSet_2_2_2_1_2_2 .
:Appearance_2_2_2_1_2_1 a owl:NamedIndividual, x3do:Appearance ;
  x3do:hasParent :Shape_2_2_2_1_2 .
:IndexedLineSet_2_2_2_1_2_2 a owl:NamedIndividual, x3do:IndexedLineSet ;
  x3do:hasParent :Shape_2_2_2_1_2 ;
  x3do:hasCoord :Coordinate_2_2_2_1_2_2_1 ;
  x3do:coordIndex ( 0 1 2 3 0 ) .
:Coordinate_2_2_2_1_2_2_1 a owl:NamedIndividual, x3do:Coordinate ;
  x3do:hasParent :IndexedLineSet_2_2_2_1_2_2 ;
  x3do:point ( -1.0 -1.0 0.0 1.0 -1.0 0.0 1.0 1.0 0.0 -1.0 1.0 0.0 ) .
:Selector a owl:NamedIndividual, x3do:Script ;
  x3do:hasParent :ProtoBody_2_2_2 ;
  x3do:hasField :field_2_2_2_2_1, :field_2_2_2_2_2, :field_2_2_2_2_3 ;
  x3do:hasIS :IS_2_2_2_2_4 ;
  x3do:DEF 'Selector' ;
  x3do:directOutput true ;
  x3do:sourceCode """
ecmascript:
    function initialize( ) {
        texture_changed = textures[0];
        Browser.println ('[Cut Selector] initialize(): textures.length=' + textures.length); // debug
    }
    function set_fraction( f, tm ) {
        i = Math.floor(f * 10);
        if ( i == 10 ) { i = 9; }
        Browser.println ('[Cut Selector] set_fraction(): i=' + i); // debug
        texture_changed = textures[i];
    }
""" .
:field_2_2_2_2_1 a owl:NamedIndividual, x3do:field ;
  x3do:hasParent :Selector ;
  x3do:accessType 'initializeOnly' ;
  x3do:name 'textures' ;
  x3do:type 'MFNode' .
:field_2_2_2_2_2 a owl:NamedIndividual, x3do:field ;
  x3do:hasParent :Selector ;
  x3do:accessType 'outputOnly' ;
  x3do:name 'texture_changed' ;
  x3do:type 'SFNode' .
:field_2_2_2_2_3 a owl:NamedIndividual, x3do:field ;
  x3do:hasParent :Selector ;
  x3do:accessType 'inputOnly' ;
  x3do:name 'set_fraction' ;
  x3do:type 'SFFloat' .
:IS_2_2_2_2_4 a owl:NamedIndividual, x3do:IS ;
  x3do:hasParent :Selector ;
  x3do:hasConnect :connect_2_2_2_2_4_1, :connect_2_2_2_2_4_2 .
:connect_2_2_2_2_4_1 a owl:NamedIndividual, x3do:connect ;
  x3do:hasParent :IS_2_2_2_2_4 ;
  x3do:nodeField 'textures' ;
  x3do:protoField 'textures' .
:connect_2_2_2_2_4_2 a owl:NamedIndividual, x3do:connect ;
  x3do:hasParent :IS_2_2_2_2_4 ;
  x3do:nodeField 'set_fraction' ;
  x3do:protoField 'set_fraction' .
:ROUTE_2_2_2_3 a owl:NamedIndividual, x3do:ROUTE ;
  x3do:hasParent :ProtoBody_2_2_2 ;
  x3do:fromField 'texture_changed' ;
  x3do:fromNode 'Selector' ;
  x3do:toField 'set_texture' ;
  x3do:toNode 'App' .
:ProtoDeclare_2_3 a owl:NamedIndividual, x3do:ProtoDeclare ;
  x3do:hasParent :Scene ;
  x3do:hasProtoInterface :ProtoInterface_2_3_1 ;
  x3do:hasProtoBody :ProtoBody_2_3_2 ;
  x3do:name 'SlidingPlane' .
:ProtoInterface_2_3_1 a owl:NamedIndividual, x3do:ProtoInterface ;
  x3do:hasParent :ProtoDeclare_2_3 ;
  x3do:hasField :field_2_3_1_1, :field_2_3_1_2, :field_2_3_1_3 .
:field_2_3_1_1 a owl:NamedIndividual, x3do:field ;
  x3do:hasParent :ProtoInterface_2_3_1 ;
  x3do:accessType 'initializeOnly' ;
  x3do:name 'textures' ;
  x3do:type 'MFNode' .
:field_2_3_1_2 a owl:NamedIndividual, x3do:field ;
  x3do:hasParent :ProtoInterface_2_3_1 ;
  x3do:accessType 'initializeOnly' ;
  x3do:name 'minMaxX' ;
  x3do:type 'SFVec2f' ;
  x3do:value ( 0.0 1.0 ) .
:field_2_3_1_3 a owl:NamedIndividual, x3do:field ;
  x3do:hasParent :ProtoInterface_2_3_1 ;
  x3do:accessType 'initializeOnly' ;
  x3do:name 'initialX' ;
  x3do:type 'SFFloat' ;
  x3do:value 0.0 .
:ProtoBody_2_3_2 a owl:NamedIndividual, x3do:ProtoBody ;
  x3do:hasParent :ProtoDeclare_2_3 ;
  x3do:hasChildren :Transform_2_3_2_1, :Translator ;
  x3do:hasROUTE :ROUTE_2_3_2_3, :ROUTE_2_3_2_4, :ROUTE_2_3_2_5, :ROUTE_2_3_2_6, :ROUTE_2_3_2_7, :ROUTE_2_3_2_8, :ROUTE_2_3_2_9, :ROUTE_2_3_2_10 .
:Transform_2_3_2_1 a owl:NamedIndividual, x3do:Transform ;
  x3do:hasParent :ProtoBody_2_3_2 ;
  x3do:hasChildren :Slider, :PlanePosition ;
  x3do:rotation ( 0.0 1.0 0.0 1.571 ) .
:Slider a owl:NamedIndividual, x3do:PlaneSensor ;
  x3do:hasParent :Transform_2_3_2_1 ;
  x3do:DEF 'Slider' ;
  x3do:description 'drag to see cross-section slices' .
:PlanePosition a owl:NamedIndividual, x3do:Transform ;
  x3do:hasParent :Transform_2_3_2_1 ;
  x3do:hasChildren :Plane, :Transform_2_3_2_1_2_2 ;
  x3do:DEF 'PlanePosition' ;
  x3do:rotation ( 0.0 1.0 0.0 -1.571 ) .
:Plane a owl:NamedIndividual, x3do:ProtoInstance ;
  x3do:hasParent :PlanePosition ;
  x3do:hasIS :IS_2_3_2_1_2_1_1 ;
  x3do:DEF 'Plane' ;
  x3do:name 'TexturePlane' .
:IS_2_3_2_1_2_1_1 a owl:NamedIndividual, x3do:IS ;
  x3do:hasParent :Plane ;
  x3do:hasConnect :connect_2_3_2_1_2_1_1_1 .
:connect_2_3_2_1_2_1_1_1 a owl:NamedIndividual, x3do:connect ;
  x3do:hasParent :IS_2_3_2_1_2_1_1 ;
  x3do:nodeField 'textures' ;
  x3do:protoField 'textures' .
:Transform_2_3_2_1_2_2 a owl:NamedIndividual, x3do:Transform ;
  x3do:hasParent :PlanePosition ;
  x3do:hasChildren :Shape_2_3_2_1_2_2_1 ;
  x3do:rotation ( 0.0 1.0 0.0 1.571 ) ;
  x3do:translation ( 1.05 -1.2 0.0 ) .
:Shape_2_3_2_1_2_2_1 a owl:NamedIndividual, x3do:Shape ;
  x3do:hasParent :Transform_2_3_2_1_2_2 ;
  x3do:hasAppearance :Appearance_2_3_2_1_2_2_1_1 ;
  x3do:hasGeometry :Label .
:Appearance_2_3_2_1_2_2_1_1 a owl:NamedIndividual, x3do:Appearance ;
  x3do:hasParent :Shape_2_3_2_1_2_2_1 .
:Label a owl:NamedIndividual, x3do:Text ;
  x3do:hasParent :Shape_2_3_2_1_2_2_1 ;
  x3do:hasFontStyle :FontStyle_2_3_2_1_2_2_1_2_1 ;
  x3do:DEF 'Label' ;
  x3do:string '""' .
:FontStyle_2_3_2_1_2_2_1_2_1 a owl:NamedIndividual, x3do:FontStyle ;
  x3do:hasParent :Label ;
  x3do:justify '"MIDDLE" "MIDDLE"' ;
  x3do:size 0.3 ;
  x3do:cssStyle 'BOLD' .
:Translator a owl:NamedIndividual, x3do:Script ;
  x3do:hasParent :ProtoBody_2_3_2 ;
  x3do:hasField :field_2_3_2_2_1, :field_2_3_2_2_2, :field_2_3_2_2_3, :field_2_3_2_2_4, :field_2_3_2_2_5, :field_2_3_2_2_6, :field_2_3_2_2_7, :field_2_3_2_2_8 ;
  x3do:hasIS :IS_2_3_2_2_9 ;
  x3do:DEF 'Translator' ;
  x3do:sourceCode """
ecmascript:
        function translate( x ) {
        // compute the fraction using the given X position
            f = (x-minMaxX[0]) / (minMaxX[1] - minMaxX[0]);
        // send a fraction event
            fraction_changed = f;
        // send a new label string with 1 digit after decimal
            label_changed[0] = Math.floor(f*10.0)/10.0;
        }

        function initialize( ) {
        // set the plane sensor bounds
            minPosition_changed[0] = minMaxX[0];
            minPosition_changed[1] = 0.0;
            maxPosition_changed[0] = minMaxX[1];
            maxPosition_changed[1] = 0.0;
        // set the plane sensor initial position
            offset_changed[0] = initialX;
            offset_changed[1] = 0.0;
            offset_changed[2] = 0.0;
        // compute the initial values
            translate( initialX );
        }

        function set_translation( t, tm ) {
        // compute the new values
            translate( t[0] );
        }
""" .
:field_2_3_2_2_1 a owl:NamedIndividual, x3do:field ;
  x3do:hasParent :Translator ;
  x3do:accessType 'inputOnly' ;
  x3do:name 'set_translation' ;
  x3do:type 'SFVec3f' .
:field_2_3_2_2_2 a owl:NamedIndividual, x3do:field ;
  x3do:hasParent :Translator ;
  x3do:accessType 'initializeOnly' ;
  x3do:name 'minMaxX' ;
  x3do:type 'SFVec2f' .
:field_2_3_2_2_3 a owl:NamedIndividual, x3do:field ;
  x3do:hasParent :Translator ;
  x3do:accessType 'outputOnly' ;
  x3do:name 'minPosition_changed' ;
  x3do:type 'SFVec2f' .
:field_2_3_2_2_4 a owl:NamedIndividual, x3do:field ;
  x3do:hasParent :Translator ;
  x3do:accessType 'outputOnly' ;
  x3do:name 'fraction_changed' ;
  x3do:type 'SFFloat' .
:field_2_3_2_2_5 a owl:NamedIndividual, x3do:field ;
  x3do:hasParent :Translator ;
  x3do:accessType 'initializeOnly' ;
  x3do:name 'initialX' ;
  x3do:type 'SFFloat' .
:field_2_3_2_2_6 a owl:NamedIndividual, x3do:field ;
  x3do:hasParent :Translator ;
  x3do:accessType 'outputOnly' ;
  x3do:name 'offset_changed' ;
  x3do:type 'SFVec3f' .
:field_2_3_2_2_7 a owl:NamedIndividual, x3do:field ;
  x3do:hasParent :Translator ;
  x3do:accessType 'outputOnly' ;
  x3do:name 'maxPosition_changed' ;
  x3do:type 'SFVec2f' .
:field_2_3_2_2_8 a owl:NamedIndividual, x3do:field ;
  x3do:hasParent :Translator ;
  x3do:accessType 'outputOnly' ;
  x3do:name 'label_changed' ;
  x3do:type 'MFString' .
:IS_2_3_2_2_9 a owl:NamedIndividual, x3do:IS ;
  x3do:hasParent :Translator ;
  x3do:hasConnect :connect_2_3_2_2_9_1, :connect_2_3_2_2_9_2 .
:connect_2_3_2_2_9_1 a owl:NamedIndividual, x3do:connect ;
  x3do:hasParent :IS_2_3_2_2_9 ;
  x3do:nodeField 'minMaxX' ;
  x3do:protoField 'minMaxX' .
:connect_2_3_2_2_9_2 a owl:NamedIndividual, x3do:connect ;
  x3do:hasParent :IS_2_3_2_2_9 ;
  x3do:nodeField 'initialX' ;
  x3do:protoField 'initialX' .
:ROUTE_2_3_2_3 a owl:NamedIndividual, x3do:ROUTE ;
  x3do:hasParent :ProtoBody_2_3_2 ;
  x3do:fromField 'translation_changed' ;
  x3do:fromNode 'Slider' ;
  x3do:toField 'set_translation' ;
  x3do:toNode 'PlanePosition' .
:ROUTE_2_3_2_4 a owl:NamedIndividual, x3do:ROUTE ;
  x3do:hasParent :ProtoBody_2_3_2 ;
  x3do:fromField 'translation_changed' ;
  x3do:fromNode 'Slider' ;
  x3do:toField 'set_translation' ;
  x3do:toNode 'Translator' .
:ROUTE_2_3_2_5 a owl:NamedIndividual, x3do:ROUTE ;
  x3do:hasParent :ProtoBody_2_3_2 ;
  x3do:fromField 'fraction_changed' ;
  x3do:fromNode 'Translator' ;
  x3do:toField 'set_fraction' ;
  x3do:toNode 'Plane' .
:ROUTE_2_3_2_6 a owl:NamedIndividual, x3do:ROUTE ;
  x3do:hasParent :ProtoBody_2_3_2 ;
  x3do:fromField 'label_changed' ;
  x3do:fromNode 'Translator' ;
  x3do:toField 'set_string' ;
  x3do:toNode 'Label' .
:ROUTE_2_3_2_7 a owl:NamedIndividual, x3do:ROUTE ;
  x3do:hasParent :ProtoBody_2_3_2 ;
  x3do:fromField 'minPosition_changed' ;
  x3do:fromNode 'Translator' ;
  x3do:toField 'set_minPosition' ;
  x3do:toNode 'Slider' .
:ROUTE_2_3_2_8 a owl:NamedIndividual, x3do:ROUTE ;
  x3do:hasParent :ProtoBody_2_3_2 ;
  x3do:fromField 'maxPosition_changed' ;
  x3do:fromNode 'Translator' ;
  x3do:toField 'set_maxPosition' ;
  x3do:toNode 'Slider' .
:ROUTE_2_3_2_9 a owl:NamedIndividual, x3do:ROUTE ;
  x3do:hasParent :ProtoBody_2_3_2 ;
  x3do:fromField 'offset_changed' ;
  x3do:fromNode 'Translator' ;
  x3do:toField 'set_offset' ;
  x3do:toNode 'Slider' .
:ROUTE_2_3_2_10 a owl:NamedIndividual, x3do:ROUTE ;
  x3do:hasParent :ProtoBody_2_3_2 ;
  x3do:fromField 'offset_changed' ;
  x3do:fromNode 'Translator' ;
  x3do:toField 'set_translation' ;
  x3do:toNode 'PlanePosition' .
:Background_2_4 a owl:NamedIndividual, x3do:Background ;
  x3do:hasParent :Scene ;
  x3do:skyColor ( 0 0.333333 0.66667 ) .
:Transform_2_5 a owl:NamedIndividual, x3do:Transform ;
  x3do:hasParent :Scene ;
  x3do:hasChildren :Anchor_2_5_1 ;
  x3do:translation ( 0 2.5 0 ) .
:Anchor_2_5_1 a owl:NamedIndividual, x3do:Anchor ;
  x3do:hasParent :Transform_2_5 ;
  x3do:hasChildren :Shape_2_5_1_1, :Shape_2_5_1_2 ;
  x3do:description 'select text to view parent scene' ;
  x3do:url '"CutPlane.x3d" "https://www.web3d.org/x3d/content/examples/Vrml2Sourcebook/Siggraph98Course/CutPlane.x3d" "CutPlane.wrl" "https://www.web3d.org/x3d/content/examples/Vrml2Sourcebook/Siggraph98Course/CutPlane.wrl"' .
:Shape_2_5_1_1 a owl:NamedIndividual, x3do:Shape ;
  x3do:hasParent :Anchor_2_5_1 ;
  x3do:hasGeometry :Text_2_5_1_1_1 ;
  x3do:hasAppearance :Appearance_2_5_1_1_2 .
:Text_2_5_1_1_1 a owl:NamedIndividual, x3do:Text ;
  x3do:hasParent :Shape_2_5_1_1 ;
  x3do:hasFontStyle :FontStyle_2_5_1_1_1_1 ;
  x3do:string '"The Cut.x3d scene holds" "prototype declarations" "Select this text to view example usage" "in CutPlane.x3d scene"' .
:FontStyle_2_5_1_1_1_1 a owl:NamedIndividual, x3do:FontStyle ;
  x3do:hasParent :Text_2_5_1_1_1 ;
  x3do:justify '"MIDDLE" "MIDDLE"' ;
  x3do:cssStyle 'BOLD' .
:Appearance_2_5_1_1_2 a owl:NamedIndividual, x3do:Appearance ;
  x3do:hasParent :Shape_2_5_1_1 ;
  x3do:hasMaterial :Material_2_5_1_1_2_1 .
:Material_2_5_1_1_2_1 a owl:NamedIndividual, x3do:Material ;
  x3do:hasParent :Appearance_2_5_1_1_2 ;
  x3do:diffuseColor ( 1 0.9 0.4 ) .
:Shape_2_5_1_2 a owl:NamedIndividual, x3do:Shape ;
  x3do:hasParent :Anchor_2_5_1 ;
  x3do:hasGeometry :Box_2_5_1_2_1 ;
  x3do:hasAppearance :Appearance_2_5_1_2_2 .
:Box_2_5_1_2_1 a owl:NamedIndividual, x3do:Box ;
  x3do:hasParent :Shape_2_5_1_2 ;
  x3do:size ( 12 5 0.1 ) .
:Appearance_2_5_1_2_2 a owl:NamedIndividual, x3do:Appearance ;
  x3do:hasParent :Shape_2_5_1_2 ;
  x3do:hasMaterial :Material_2_5_1_2_2_1 .
:Material_2_5_1_2_2_1 a owl:NamedIndividual, x3do:Material ;
  x3do:hasParent :Appearance_2_5_1_2_2 ;
  x3do:transparency 1 .
:Transform_2_6 a owl:NamedIndividual, x3do:Transform ;
  x3do:hasParent :Scene ;
  x3do:hasChildren :Anchor_2_6_1 ;
  x3do:translation ( 0 -2.5 0 ) .
:Anchor_2_6_1 a owl:NamedIndividual, x3do:Anchor ;
  x3do:hasParent :Transform_2_6 ;
  x3do:hasChildren :Shape_2_6_1_1, :Shape_2_6_1_2 ;
  x3do:description 'select text to view parent scene' ;
  x3do:url '"TexturePlane.x3d" "https://www.web3d.org/x3d/content/examples/Vrml2Sourcebook/Siggraph98Course/TexturePlane.x3d" "TexturePlane.wrl" "https://www.web3d.org/x3d/content/examples/Vrml2Sourcebook/Siggraph98Course/TexturePlane.wrl"' .
:Shape_2_6_1_1 a owl:NamedIndividual, x3do:Shape ;
  x3do:hasParent :Anchor_2_6_1 ;
  x3do:hasGeometry :Text_2_6_1_1_1 ;
  x3do:hasAppearance :Appearance_2_6_1_1_2 .
:Text_2_6_1_1_1 a owl:NamedIndividual, x3do:Text ;
  x3do:hasParent :Shape_2_6_1_1 ;
  x3do:hasFontStyle :FontStyle_2_6_1_1_1_1 ;
  x3do:string '"or select this text to view example usage" "in TexturePlane.x3d scene"' .
:FontStyle_2_6_1_1_1_1 a owl:NamedIndividual, x3do:FontStyle ;
  x3do:hasParent :Text_2_6_1_1_1 ;
  x3do:justify '"MIDDLE" "MIDDLE"' ;
  x3do:cssStyle 'BOLD' .
:Appearance_2_6_1_1_2 a owl:NamedIndividual, x3do:Appearance ;
  x3do:hasParent :Shape_2_6_1_1 ;
  x3do:hasMaterial :Material_2_6_1_1_2_1 .
:Material_2_6_1_1_2_1 a owl:NamedIndividual, x3do:Material ;
  x3do:hasParent :Appearance_2_6_1_1_2 ;
  x3do:diffuseColor ( 1 0.9 0.4 ) .
:Shape_2_6_1_2 a owl:NamedIndividual, x3do:Shape ;
  x3do:hasParent :Anchor_2_6_1 ;
  x3do:hasGeometry :Box_2_6_1_2_1 ;
  x3do:hasAppearance :Appearance_2_6_1_2_2 .
:Box_2_6_1_2_1 a owl:NamedIndividual, x3do:Box ;
  x3do:hasParent :Shape_2_6_1_2 ;
  x3do:size ( 12 5 0.1 ) .
:Appearance_2_6_1_2_2 a owl:NamedIndividual, x3do:Appearance ;
  x3do:hasParent :Shape_2_6_1_2 ;
  x3do:hasMaterial :Material_2_6_1_2_2_1 .
:Material_2_6_1_2_2_1 a owl:NamedIndividual, x3do:Material ;
  x3do:hasParent :Appearance_2_6_1_2_2 ;
  x3do:transparency 1 .
